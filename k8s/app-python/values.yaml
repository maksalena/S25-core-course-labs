replicaCount: 3

image:
  repository: maksalena/server_app
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# Specifies sleep time for pre-hook and post-hook
sleepyTime: 5

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""


password: "pass1234"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }
podLabels: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: LoadBalancer
  port: 8080

ingress:
  enabled: true
  className: ""
  annotations: { }
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: python.app
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 1
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 30Mi
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
#   cpu: 100m
#   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.

volumes:
  - name: config-volume
    configMap:
      name: python-app-configmap

  - name: visits-data
      emptyDir:
        sizeLimit: 500Mi
        
  - name: init-data
      emptyDir:
        sizeLimit: 100Mi

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: config-volume
    mountPath: /app/config_map

  - name: visits-data
      mountPath: /app/data
  
  - name: init-data
      mountPath: app/init_data

nodeSelector: { }

tolerations: [ ]

affinity: { }

vct:
   name: visits-data
   storageName: python-storage
   storage: 1Gi

initContainers:
  - name: install
    image: busybox:1.28
    command:
      - wget
      - "-O"
      - "/app/init_data/index.html"
      - http://info.cern.ch
    volumeMounts:
      - name: init-data
        mountPath: "/app/init_data"
  - name: queue-one
    image: busybox:1.28
    command:
      - sh
      - "-c"
      - "echo line_one > /app/init_data/queue.txt"
    volumeMounts:
      - name: init-data
        mountPath: "/app/init_data"
  - name: queue-two
    image: busybox:1.28
    command:
      - sh
      - "-c"
      - "echo line_two >> /app/init_data/queue.txt"
    volumeMounts:
      - name: init-data
        mountPath: "/app/init_data"
  - name: queue-three
    image: busybox:1.28
    command:
      - sh
      - "-c"
      - "echo line_three >> /app/init_data/queue.txt"
    volumeMounts:
      - name: init-data
        mountPath: "/app/init_data"
